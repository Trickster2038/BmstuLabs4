// рекурсивный спуск
// Бэкус-Наур
// <запись> ::= var <идентификатор>:record <постоянные поля> <поля с вариантами> end;
// <постоянные поля> ::= <поля одного типа>;
//                    |<поля одного типа>;<постоянные поля>
// <поля с вариантами> ::= case <идентификатор> of <случаи>

// <случаи> ::= <ключ>: (<поля одного типа>)
// ИНОГДА НУЖНА ; В КОНЦЕ

// <поля одного типа> ::= <идентификаторы>: <тип>
// <идентификаторы> ::= <идентификатор>
//                      |<идентификатор>,<идентификаторы>
// TODO <идентификатор>, <ключ>, <тип> - регулярки

function validID(x){
    var regex1 = /[ :;]{1,}/m 
    tokens = x.split(/[ :;]{1,}/)
    x = x.split(/[ :;]{1,}/)[1]
    //x = regex1.exec(x)[1]
    console.log(x)
    flag = /^[_a-z]+[_a-z0-9]{0,}$/.test(tokens[0])
    if(flag){
        console.log("normal ID")
    } else {
        throw ("Wrong ID on " + x)
    }
    return x
}

validID("_abc3 feff ghh")
validID("4abc3 regg")